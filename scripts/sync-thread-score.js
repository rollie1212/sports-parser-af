import { dbConnect } from '../lib/db.js';
import dotenv from 'dotenv';
dotenv.config();

async function syncThreadScore() {
  try {
    await dbConnect();
    const { threadsCol, fixturesCol } = await import('../lib/db.js');
    const threads = await threadsCol();
    const fixtures = await fixturesCol();
    
    console.log('üîß –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç –≤ —Ç—Ä–µ–¥–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Å—á–µ—Ç–æ–º –∏–∑ fixtures...');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—á–µ—Ç –∏–∑ fixtures
    const fixture = await fixtures.findOne({ fixtureId: 1386587 });
    if (!fixture) {
      console.log('‚ùå Fixture 1386587 –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log('üìä –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—á–µ—Ç –∏–∑ fixtures:', JSON.stringify(fixture.score));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç –≤ —Ç—Ä–µ–¥–µ
    const result = await threads.updateOne(
      { fixtureId: 1386587 },
      {
        $set: {
          currentScore: fixture.score,
          finalScore: fixture.score,
          lastScoreUpdate: new Date(),
          lastStatusUpdate: new Date()
        }
      }
    );
    
    if (result.modifiedCount > 0) {
      console.log('‚úÖ –°—á–µ—Ç –≤ —Ç—Ä–µ–¥–µ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const updatedThread = await threads.findOne({ fixtureId: 1386587 });
      console.log('\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ç—Ä–µ–¥:');
      console.log('‚öΩ currentScore:', JSON.stringify(updatedThread.currentScore));
      console.log('‚öΩ finalScore:', JSON.stringify(updatedThread.finalScore));
      console.log('üìù resultPosted:', updatedThread.resultPosted);
      console.log('üìù discordResultPosted:', updatedThread.discordResultPosted);
      
      console.log('\nüéØ –¢–µ–ø–µ—Ä—å –±–æ—Ç –¥–æ–ª–∂–µ–Ω –ø–æ—Å—Ç–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!');
    } else {
      console.log('‚ö†Ô∏è –¢—Ä–µ–¥ –Ω–µ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

syncThreadScore();
